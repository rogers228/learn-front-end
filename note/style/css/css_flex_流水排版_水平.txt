https://www.casper.tw/css/2017/07/21/css-flex/
https://medium.com/%E7%8B%97%E5%A5%B4%E5%B7%A5%E7%A8%8B%E5%B8%AB/css-flexbox-%E4%BC%B8%E7%B8%AE%E8%87%AA%E5%A6%82%E7%9A%84%E6%8E%92%E7%89%88-%E5%9F%BA%E7%A4%8E%E8%A7%80%E5%BF%B5-85ffe3ae44b3

分為外容器與內元件，就是具有父子關係
container 外容器
item      內元件

container 外容器
display: flex  流水排版

flex-direction: row | row-reverse | column | column-reverse; 主軸方向(相對90度就是次軸)  row水平 column垂直
flex-wrap: nowrap | wrap | wrap-reverse; 換行模式  不換行 換行  換行時反轉
flex-flow: <'flex-direction'> || <'flex-wrap'>  為以上兩個的縮寫  可同時設定兩個屬性

justify-content: flex-start | flex-end | center | space-between | space-around;  主軸對齊
                    靠起始       靠末端     置中    靠兩側最大間隙    分散平均間隙(兩側有間隙)
    若主軸為row(水平)時，就類似水平對齊的概念

align-items: flex-start | flex-end | center | baseline     |    stretch;              次軸對齊(對單個元素進行調整) 
                靠起始       靠末端     置中      未理解         拉伸跟隨以最大的item
    同上的概念 轉為次軸

align-content: flex-start | flex-end | center | space-between | space-around |           stretch;  次軸對齊(對多個元素進行調整)
                靠起始       靠末端     置中      靠兩側最大間隙  分散平均間隙(兩側有間隙)   拉伸跟隨以最大的item


item      內元件
flex-grow: 元件所伸展 預設值為0
flex-shrink: 元件是否伸縮  1縮放(預設值)，0不縮放。
flex-basis: 元件的基準值，可使用不同的單位值。
flex:  <flex-grow> <flex-shrink> <flex-basis>
align-self: 次軸的對齊 可以再次調整


垂直排列
display: flex;
flex-direction: column;
justify-content: flex-start;

水平排列
display: flex;
flex-direction: row;
justify-content: flex-start;
align-items: center;